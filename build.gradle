group = 'com.michalkowol'
version = '0.1.0'

buildscript {
    ext.kotlin_version = '1.1.0'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'jacoco'

defaultTasks 'run'

mainClassName = 'com.michalkowol.Boot'
jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

task fatJar(type: Jar) {
    baseName = "${project.name}-assembly"
    manifest = jar.manifest
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

sourceSets {
    integrationTest {
        kotlin {
            srcDirs += 'src/it/kotlin'
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
        resources.srcDirs += 'src/it/resources'
    }
}
configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}
task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}

test {
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}

integrationTest {
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}

task stage(dependsOn: ['fatJar', 'build', 'clean'])
build.mustRunAfter clean
fatJar.mustRunAfter build
stage.dependsOn(fatJar)

jacocoTestReport {
    reports {
        csv.enabled false
        html.enabled true
        xml.enabled true
    }
    dependsOn test
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.1' }
    maven { url 'http://dl.bintray.com/kotlin/kotlinx.coroutines' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    ext.kotlinxcoroutines = '0.12'
    ext.rinca = '0.6.1'

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile 'org.slf4j:slf4j-api:1.7.+'
    compile 'ch.qos.logback:logback-classic:1.1.+'

    compile 'com.sparkjava:spark-core:2.5.+'
    compile 'com.google.inject:guice:4.1.+'
    compile 'com.typesafe:config:1.3.+'

    compile 'com.zaxxer:HikariCP:2.5.+'
    compile 'org.flywaydb:flyway-core:4.1.+'
    compile 'com.h2database:h2:1.4.+'
    compile 'org.postgresql:postgresql:9.4.+'

    compile "com.github.softwareberg.rinca:database:$rinca"
    compile "com.github.softwareberg.rinca:httpclient:$rinca"
    compile "com.github.softwareberg.rinca:json:$rinca"
    compile "com.github.softwareberg.rinca:xml:$rinca"

    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxcoroutines"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$kotlinxcoroutines"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-nio:$kotlinxcoroutines"

    testCompile 'junit:junit:4.+'
    testCompile 'com.natpryce:hamkrest:1.3.+'
    testCompile 'com.nhaarman:mockito-kotlin:1.3.+'

    integrationTestCompile 'com.ninja-squad:DbSetup:2.1.+'
    integrationTestCompile 'com.despegar:spark-test:1.1.+'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
}
